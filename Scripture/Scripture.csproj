<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0-windows</TargetFramework>
    <RootNamespace>Scripture</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Platforms>x64</Platforms>
	  <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
	  <UseWindowsForms>true</UseWindowsForms>
	  <UseWPF>true</UseWPF>
	  <ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AutoCAD.NET" Version="25.0.1" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ScriptureCore\ScriptureCore.csproj" />
    <ProjectReference Include="..\ScriptureUI\ScriptureUI.csproj" />
  </ItemGroup>
  <ItemGroup>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <PropertyGroup>
      <ScriptureUIBinDir>$(SolutionDir)ScriptureUI\bin\$(Configuration)\net8.0-windows\</ScriptureUIBinDir>
      <NuGetPackagesDir>$(UserProfile)\.nuget\packages\</NuGetPackagesDir>
      <OutputDir>$(TargetDir)</OutputDir>
    </PropertyGroup>

    <!-- Copy AvalonEdit -->
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)avalonedit\6.3.0.90\lib\net7.0-windows7.0\ICSharpCode.AvalonEdit.dll&quot; &quot;$(OutputDir)&quot;" />

    <!-- Copy Azure.AI.OpenAI -->
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)azure.ai.openai\2.0.0-beta.6\lib\netstandard2.0\Azure.AI.OpenAI.dll&quot; &quot;$(OutputDir)&quot;" />

    <!-- Copy Azure.Core and dependencies -->
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)azure.core\1.43.0\lib\net6.0\Azure.Core.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)microsoft.bcl.asyncinterfaces\6.0.0\lib\netstandard2.1\Microsoft.Bcl.AsyncInterfaces.dll&quot; &quot;$(OutputDir)&quot;" />

    <!-- Copy OpenAI -->
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)openai\2.0.0-beta.12\lib\net6.0\OpenAI.dll&quot; &quot;$(OutputDir)&quot;" />

    <!-- Copy Microsoft.Extensions libraries -->
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)microsoft.extensions.configuration\8.0.0\lib\net8.0\Microsoft.Extensions.Configuration.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)microsoft.extensions.configuration.json\8.0.0\lib\net8.0\Microsoft.Extensions.Configuration.Json.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)microsoft.extensions.dependencyinjection\8.0.0\lib\net8.0\Microsoft.Extensions.DependencyInjection.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)microsoft.extensions.dependencyinjection.abstractions\8.0.0\lib\net8.0\Microsoft.Extensions.DependencyInjection.Abstractions.dll&quot; &quot;$(OutputDir)&quot;" />

    <!-- Additional dependencies based on deps.json -->
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)system.clientmodel\1.1.0\lib\net6.0\System.ClientModel.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)system.memory.data\1.0.2\lib\netstandard2.0\System.Memory.Data.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)system.text.encodings.web\8.0.0\lib\net8.0\System.Text.Encodings.Web.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)system.text.json\8.0.0\lib\net8.0\System.Text.Json.dll&quot; &quot;$(OutputDir)&quot;" />
    <Exec Command="xcopy /Y &quot;$(NuGetPackagesDir)system.threading.tasks.extensions\4.5.4\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll&quot; &quot;$(OutputDir)&quot;" />
  </Target>

</Project>
